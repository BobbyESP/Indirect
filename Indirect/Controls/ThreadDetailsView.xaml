<UserControl
    x:Class="Indirect.Controls.ThreadDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls1="using:Indirect.Controls"
    xmlns:converters="using:Indirect.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:local="using:Indirect"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:user="using:InstagramAPI.Classes.User"
    xmlns:wrappers="using:Indirect.Entities.Wrappers"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:SendButtonGlyphConverter x:Key="SendButtonGlyphConverter" />
            <converters:EqualityVisibilityConverter x:Key="VisibleWhenZeroConverter" />
            <converters:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter" />
            <converters:NullVisibilityConverter x:Key="NullVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid
        AllowDrop="True"
        Background="Transparent"
        DragOver="OnDragOver"
        Drop="OnDrop">
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <FlyoutBase.AttachedFlyout>
            <Flyout x:Name="FilePickerFlyout" Closing="FilePickerFlyout_OnClosing">
                <StackPanel Orientation="Vertical">
                    <StackPanel x:Name="SendConfirmation" MaxWidth="300">
                        <controls1:PhotoVideoControl
                            x:Name="FilePickerPreview"
                            Height="160"
                            Margin="0,0,0,12"
                            HorizontalAlignment="Center"
                            CornerRadius="2" />

                        <TextBlock
                            Margin="0,0,0,12"
                            HorizontalAlignment="Center"
                            Style="{ThemeResource FluentBaseTextStyle}"
                            Text="Do you want to send this photo?" />

                        <Button
                            HorizontalAlignment="Center"
                            Click="SendFileButton_OnClick"
                            Content="Send">
                            <Button.KeyboardAccelerators>
                                <KeyboardAccelerator Key="Enter" />
                            </Button.KeyboardAccelerators>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Flyout>
        </FlyoutBase.AttachedFlyout>

        <Border
            Grid.Row="0"
            Grid.RowSpan="2"
            Background="{ThemeResource SystemControlAcrylicElementBrush}"
            Canvas.ZIndex="1"
            Visibility="{x:Bind ThreadHeaderVisibility, Mode=OneWay}" />

        <CommandBar
            Grid.Row="1"
            Background="Transparent"
            Canvas.ZIndex="2"
            DefaultLabelPosition="Right"
            IsDynamicOverflowEnabled="False"
            OverflowButtonVisibility="Collapsed"
            Visibility="{x:Bind ThreadHeaderVisibility, Mode=OneWay}"
            XYFocusKeyboardNavigation="Enabled">

            <FlyoutBase.AttachedFlyout>
                <Flyout x:Name="UserListFlyout" Placement="BottomEdgeAlignedLeft">
                    <ListView
                        MaxHeight="260"
                        IsItemClickEnabled="True"
                        ItemClick="UserList_OnItemClick"
                        ItemsSource="{x:Bind Thread.Users, Mode=OneWay}"
                        SelectionMode="None">

                        <FlyoutBase.AttachedFlyout>
                            <Flyout x:Name="UserInfoFlyout">
                                <controls1:UserInfoView x:Name="UserInfoView" />
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>

                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="user:BaseUser">
                                <StackPanel Orientation="Horizontal">
                                    <controls:ImageEx
                                        Width="28"
                                        Height="28"
                                        Margin="0,0,10,0"
                                        CornerRadius="99"
                                        Source="{x:Bind ProfilePictureUrl}" />
                                    <TextBlock VerticalAlignment="Center" Text="{x:Bind Username}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                    </ListView>
                </Flyout>
            </FlyoutBase.AttachedFlyout>

            <AppBarButton
                x:Name="ViewProfileAppBarButton"
                Click="ShowUsersInfoFlyout"
                Icon="Contact2"
                Label="View profile" />

            <AppBarButton
                Width="48"
                Click="OpenInNewWindow_OnClick"
                LabelPosition="Collapsed"
                ToolTipService.ToolTip="Open thread in a new window"
                Visibility="{x:Bind NewWindowButtonVisibility, Mode=OneWay}">
                <AppBarButton.Icon>
                    <FontIcon
                        VerticalAlignment="Center"
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        Glyph="&#xE8A7;" />
                </AppBarButton.Icon>
            </AppBarButton>

            <CommandBar.Content>
                <StackPanel
                    x:Name="ThreadInfoHeader"
                    Margin="8,0,0,0"
                    Background="Transparent"
                    Orientation="Horizontal"
                    Tapped="ShowUsersInfoFlyout">

                    <controls1:ProfilePicture
                        x:Name="ProfilePictureView"
                        Width="32"
                        Height="32"
                        Margin="4,0,12,0"
                        VerticalAlignment="Center"
                        Source="{x:Bind Thread.Users, Mode=OneWay}" />

                    <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                        <TextBlock Style="{ThemeResource FluentBaseTextStyle}" Text="{x:Bind Thread.Title, Mode=OneWay}" />
                        <TextBlock
                            x:Name="LastActiveText"
                            Margin="0,-1,0,0"
                            Opacity="0.6"
                            Style="{ThemeResource FluentCaptionTextStyle}"
                            Text="Active now" />
                    </StackPanel>
                </StackPanel>
            </CommandBar.Content>
        </CommandBar>

        <controls1:ChatListView
            x:Name="ItemsHolder"
            Grid.Row="0"
            Grid.RowSpan="3"
            extensions:ScrollViewerExtensions.VerticalScrollBarMargin="0,68,0,0"
            IncrementalLoadingThreshold="1"
            ItemsSource="{x:Bind Thread.ObservableItems, Mode=OneWay}"
            SelectionMode="None"
            XYFocusKeyboardNavigation="Enabled">

            <ListView.Header>
                <!--  Title bar height + command bar height = 32 + 48 = 80  -->
                <Frame Height="80" />
            </ListView.Header>

            <ListView.Footer>
                <StackPanel HorizontalAlignment="Stretch">
                    <TextBlock
                        x:Name="TypingIndicator"
                        Margin="14,6,14,10"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                        Style="{ThemeResource FluentCaptionTextStyle}"
                        Text="Typing..."
                        Visibility="{x:Bind Thread.IsSomeoneTyping, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}" />

                    <TextBlock
                        Margin="0,0,0,16"
                        HorizontalAlignment="Center"
                        Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                        Text="Send your first message to start chatting"
                        Visibility="{x:Bind Thread.ObservableItems.Count, Converter={StaticResource VisibleWhenZeroConverter}, Mode=OneWay}" />

                    <!--<Grid x:Name="PendingControlGrid" HorizontalAlignment="Stretch" Background="{ThemeResource SystemControlAcrylicElementBrush}"
                          Visibility="{x:Bind Thread.Pending, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}">
                        <Grid.Resources>
                            <ResourceDictionary>
                                <Style x:Key="PendingButtonStyle" TargetType="Button">
                                    <Setter Property="Margin" Value="2"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                </Style>
                            </ResourceDictionary>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <RichTextBlock Grid.Row="0" Grid.ColumnSpan="3" TextAlignment="Center" HorizontalAlignment="Stretch" Margin="10" MaxWidth="350">
                            <Paragraph>
                                <Run Text="{x:Bind Thread.Inviter.Username, Mode=OneWay}" FontWeight="Bold"/> wants to send you a message.
                            </Paragraph>
                            <Paragraph/>
                            <Paragraph FontSize="12" Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}">
                                Do you want to let <Run Text="{x:Bind Thread.Inviter.Username, Mode=OneWay}"/> send you messages from now on? They'll only know you've seen the request if you choose Accept.
                            </Paragraph>
                        </RichTextBlock>
                        <Button Grid.Row="1" Grid.Column="0" Content="Block" IsEnabled="False" ToolTipService.ToolTip="Not yet implemented" Style="{StaticResource PendingButtonStyle}"/>
                        <Button Grid.Row="1" Grid.Column="1" Content="Delete" IsEnabled="False" ToolTipService.ToolTip="Not yet implemented" Style="{StaticResource PendingButtonStyle}"/>
                        <Button Grid.Row="1" Grid.Column="2" Content="Accept" IsEnabled="False" Style="{StaticResource PendingButtonStyle}"/>
                    </Grid>-->
                </StackPanel>
            </ListView.Footer>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel VerticalAlignment="Bottom" ItemsUpdatingScrollMode="KeepLastItemInView" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="MinHeight" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="wrappers:DirectItemWrapper">
                    <controls1:ThreadItemControl Item="{x:Bind}" />
                </DataTemplate>
            </ListView.ItemTemplate>
        </controls1:ChatListView>


        <Grid
            x:Name="MessageInputGrid"
            Grid.Row="3"
            Margin="0,2,0,2"
            HorizontalAlignment="Stretch"
            XYFocusKeyboardNavigation="Enabled">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="64" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ProgressBar
                x:Name="UploadProgress"
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="4"
                Margin="2"
                HorizontalAlignment="Stretch"
                AutomationProperties.Name="Upload progress"
                IsIndeterminate="True"
                Visibility="Collapsed" />

            <Grid
                Grid.Row="1"
                Grid.Column="2"
                Margin="4"
                Padding="10,6,6,6"
                Background="{ThemeResource SystemControlAcrylicElementBrush}"
                CornerRadius="2"
                Visibility="{x:Bind Thread.ReplyingItem, Converter={StaticResource NullVisibilityConverter}, Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    FontSize="12"
                    Opacity="0.5">
                    <Run Text="Replying to " /><Run Text="{x:Bind Thread.ReplyingItem.Sender.Username, Mode=OneWay}" />
                </TextBlock>

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Text="{x:Bind Thread.ReplyingItem.Description, Mode=OneWay}" />

                <controls:ImageEx
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    Width="32"
                    Height="32"
                    Margin="6,2"
                    VerticalAlignment="Center"
                    Source="{x:Bind Thread.ReplyingItem.PreviewImageUri, Mode=OneWay}"
                    Stretch="UniformToFill" />

                <Button
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Click="ClearReplyButton_OnClick"
                    CornerRadius="2"
                    Style="{x:Null}">
                    <SymbolIcon Symbol="Cancel" />
                </Button>
            </Grid>

            <Button
                x:Name="AddFilesButton"
                Grid.Row="3"
                Grid.Column="0"
                Margin="8,0,0,0"
                AutomationProperties.Name="Add photos"
                Click="AddFilesButton_OnClick"
                ToolTipService.ToolTip="Add photos">
                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEB9F;" />
            </Button>

            <Button
                x:Name="AddGifButton"
                Grid.Row="3"
                Grid.Column="1"
                Margin="2,0,0,0"
                AutomationProperties.Name="Add a GIF"
                ToolTipService.ToolTip="Add a GIF">
                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xF4A9;" />
                <Button.Flyout>
                    <Flyout x:Name="GifPickerFlyout">
                        <controls1:AnimatedImagePicker x:Name="GifPicker" Thread="{x:Bind Thread, Mode=OneWay}" />
                    </Flyout>
                </Button.Flyout>
            </Button>

            <TextBox
                x:Name="MessageTextBox"
                Grid.Row="2"
                Grid.RowSpan="2"
                Grid.Column="2"
                Margin="4,0"
                VerticalAlignment="Stretch"
                AcceptsReturn="True"
                KeyboardAcceleratorPlacementMode="Hidden"
                MaxLength="2200"
                PlaceholderText="Type a message"
                TabIndex="0"
                Text="{x:Bind Thread.DraftMessage, Mode=TwoWay}"
                TextChanged="MessageTextBox_OnTextChanged"
                TextWrapping="Wrap">
                <TextBox.KeyboardAccelerators>
                    <KeyboardAccelerator
                        Key="Enter"
                        Invoked="MessageTextBox_OnEnterPressed"
                        Modifiers="None" />
                    <KeyboardAccelerator
                        Key="V"
                        Invoked="MessageTextBox_OnCtrlV"
                        Modifiers="Control" />
                </TextBox.KeyboardAccelerators>
            </TextBox>

            <Button
                Grid.Row="3"
                Grid.Column="3"
                Margin="0,0,2,0"
                AutomationProperties.Name="Insert an Emoji"
                Click="InsertEmojiButton_OnClick"
                ToolTipService.ToolTip="Insert an Emoji">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="E" Modifiers="Control" />
                </Button.KeyboardAccelerators>
                <SymbolIcon Symbol="Emoji2" />
            </Button>

            <Button
                x:Name="SendButton"
                Grid.Row="3"
                Grid.Column="4"
                Margin="0,0,8,0"
                HorizontalAlignment="Stretch"
                AutomationProperties.Name="Send"
                Click="SendButton_Click"
                ToolTipService.ToolTip="Send">
                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{x:Bind MessageTextBox.Text, Mode=OneWay, Converter={StaticResource SendButtonGlyphConverter}}" />
            </Button>
        </Grid>
    </Grid>
</UserControl>

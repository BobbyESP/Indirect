<UserControl
    x:Class="Indirect.Controls.ThreadDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Indirect"
    xmlns:converters="using:Indirect.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls1="using:Indirect.Controls" 
    xmlns:user="using:InstagramAPI.Classes.User" 
    xmlns:wrappers="using:Indirect.Entities.Wrappers" 
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:SendButtonGlyphConverter x:Key="SendButtonGlyphConverter"/>
            <converters:EqualityVisibilityConverter x:Key="VisibleWhenZeroConverter"/>
            <converters:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
            <converters:NullVisibilityConverter x:Key="NullVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="Transparent" AllowDrop="True" DragOver="OnDragOver" Drop="OnDrop">
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <FlyoutBase.AttachedFlyout>
            <Flyout x:Name="FilePickerFlyout" Closing="FilePickerFlyout_OnClosing">
                <StackPanel Orientation="Vertical">
                    <StackPanel x:Name="SendConfirmation" MaxWidth="300">
                        <controls1:PhotoVideoControl x:Name="FilePickerPreview" Height="160" HorizontalAlignment="Center"
                                                 CornerRadius="2" Margin="0,0,0,12"/>
                        <TextBlock Style="{ThemeResource FluentBaseTextStyle}" Text="Do you want to send this photo?" Margin="0,0,0,12" HorizontalAlignment="Center"/>
                        <Button Content="Send" HorizontalAlignment="Center" Click="SendFileButton_OnClick">
                            <Button.KeyboardAccelerators>
                                <KeyboardAccelerator Key="Enter"/>
                            </Button.KeyboardAccelerators>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Flyout>
        </FlyoutBase.AttachedFlyout>

        <Border Grid.Row="0" Grid.RowSpan="2" Canvas.ZIndex="1" Background="{ThemeResource SystemControlAcrylicElementBrush}" Visibility="{x:Bind ThreadHeaderVisibility, Mode=OneWay}"/>

        <CommandBar Grid.Row="1" Canvas.ZIndex="2" Background="Transparent" DefaultLabelPosition="Right" IsDynamicOverflowEnabled="False" OverflowButtonVisibility="Collapsed"
                    Visibility="{x:Bind ThreadHeaderVisibility, Mode=OneWay}" XYFocusKeyboardNavigation="Enabled">
            <FlyoutBase.AttachedFlyout>
                <Flyout x:Name="UserListFlyout" Placement="BottomEdgeAlignedLeft">
                    <ListView ItemsSource="{x:Bind Thread.Users, Mode=OneWay}" ItemClick="UserList_OnItemClick" IsItemClickEnabled="True" SelectionMode="None" MaxHeight="260">
                        <FlyoutBase.AttachedFlyout>
                            <Flyout x:Name="UserInfoFlyout">
                                <controls1:UserInfoView x:Name="UserInfoView"/>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="user:BaseUser">
                                <StackPanel Orientation="Horizontal">
                                    <controls:ImageEx Source="{x:Bind ProfilePictureUrl}" Width="28" Height="28" CornerRadius="99" Margin="0,0,10,0" />
                                    <TextBlock Text="{x:Bind Username}" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Flyout>
            </FlyoutBase.AttachedFlyout>
            <AppBarButton x:Name="ViewProfileAppBarButton" Icon="Contact2" Label="View profile" Click="ShowUsersInfoFlyout"/>
            <AppBarButton Click="OpenInNewWindow_OnClick" Width="48" ToolTipService.ToolTip="Open thread in a new window" LabelPosition="Collapsed"
                          Visibility="{x:Bind NewWindowButtonVisibility, Mode=OneWay}">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE8A7;" VerticalAlignment="Center"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <CommandBar.Content>
                <StackPanel x:Name="ThreadInfoHeader" Orientation="Horizontal" Background="Transparent" Tapped="ShowUsersInfoFlyout" Margin="8,0,0,0">
                    <controls1:ProfilePicture x:Name="ProfilePictureView" Source="{x:Bind Thread.Users, Mode=OneWay}" Height="32" Width="32" Margin="4,0,12,0" VerticalAlignment="Center"/>
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <TextBlock Text="{x:Bind Thread.Title, Mode=OneWay}" 
                                   Style="{ThemeResource FluentBaseTextStyle}"/>
                        <TextBlock x:Name="LastActiveText" Text="Active now" Margin="0,-1,0,0"
                                   Opacity="0.6"
                                   Style="{ThemeResource FluentCaptionTextStyle}"/>
                    </StackPanel>
                </StackPanel>
            </CommandBar.Content>
        </CommandBar>

        <controls1:ChatListView x:Name="ItemsHolder" Grid.Row="0" Grid.RowSpan="3"
                            ItemsSource="{x:Bind Thread.ObservableItems, Mode=OneWay}"
                            IncrementalLoadingThreshold="1"
                            SelectionMode="None"
                            XYFocusKeyboardNavigation="Enabled"
                            extensions:ScrollViewerExtensions.VerticalScrollBarMargin="0,68,0,0">
            <ListView.Header>
                <!-- Title bar height + command bar height = 32 + 48 = 80 -->
                <Frame Height="80"/>
            </ListView.Header>
            <ListView.Footer>
                <StackPanel HorizontalAlignment="Stretch">
                    <TextBlock x:Name="TypingIndicator" Margin="14,6,14,10" Text="Typing..."
                               Style="{ThemeResource FluentCaptionTextStyle}"
                               Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                               VerticalAlignment="Bottom"
                               HorizontalAlignment="Left" Visibility="{x:Bind Thread.IsSomeoneTyping, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}"/>
                    <TextBlock Margin="0,0,0,16" Text="Send your first message to start chatting" 
                               Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                               HorizontalAlignment="Center" 
                               Visibility="{x:Bind Thread.ObservableItems.Count, Converter={StaticResource VisibleWhenZeroConverter}, Mode=OneWay}"/>

                    <!--<Grid x:Name="PendingControlGrid" HorizontalAlignment="Stretch" Background="{ThemeResource SystemControlAcrylicElementBrush}"
                          Visibility="{x:Bind Thread.Pending, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}">
                        <Grid.Resources>
                            <ResourceDictionary>
                                <Style x:Key="PendingButtonStyle" TargetType="Button">
                                    <Setter Property="Margin" Value="2"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                </Style>
                            </ResourceDictionary>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        
                        <RichTextBlock Grid.Row="0" Grid.ColumnSpan="3" TextAlignment="Center" HorizontalAlignment="Stretch" Margin="10" MaxWidth="350">
                            <Paragraph>
                                <Run Text="{x:Bind Thread.Inviter.Username, Mode=OneWay}" FontWeight="Bold"/> wants to send you a message.
                            </Paragraph>
                            <Paragraph/>
                            <Paragraph FontSize="12" Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}">
                                Do you want to let <Run Text="{x:Bind Thread.Inviter.Username, Mode=OneWay}"/> send you messages from now on? They'll only know you've seen the request if you choose Accept.
                            </Paragraph>
                        </RichTextBlock>
                        <Button Grid.Row="1" Grid.Column="0" Content="Block" IsEnabled="False" ToolTipService.ToolTip="Not yet implemented" Style="{StaticResource PendingButtonStyle}"/>
                        <Button Grid.Row="1" Grid.Column="1" Content="Delete" IsEnabled="False" ToolTipService.ToolTip="Not yet implemented" Style="{StaticResource PendingButtonStyle}"/>
                        <Button Grid.Row="1" Grid.Column="2" Content="Accept" IsEnabled="False" Style="{StaticResource PendingButtonStyle}"/>
                    </Grid>-->
                </StackPanel>
            </ListView.Footer>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel VerticalAlignment="Bottom"
                                     ItemsUpdatingScrollMode="KeepLastItemInView"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="MinHeight" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="wrappers:DirectItemWrapper">
                    <controls1:ThreadItemControl Item="{x:Bind}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
        </controls1:ChatListView>
        

        <Grid x:Name="MessageInputGrid" Grid.Row="3" HorizontalAlignment="Stretch" Margin="0,2,0,2"
              XYFocusKeyboardNavigation="Enabled">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="64"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ProgressBar Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Margin="2"
                         x:Name="UploadProgress" Visibility="Collapsed" HorizontalAlignment="Stretch"
                         IsIndeterminate="True" AutomationProperties.Name="Upload progress"/>

            <Grid Grid.Row="1" Grid.Column="2" Visibility="{x:Bind Thread.ReplyingItem, Converter={StaticResource NullVisibilityConverter}, Mode=OneWay}"
                  Margin="4" Padding="10,6,6,6" CornerRadius="2" Background="{ThemeResource SystemControlAcrylicElementBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Column="0" Grid.Row="0" FontWeight="Bold">
                    <Run FontFamily="Segoe MDL2 Assets" Text="&#xE97A;" FontWeight="Normal" /> Replying to <Run Text="{x:Bind Thread.ReplyingItem.Sender.Username, Mode=OneWay}" />
                </TextBlock>

                <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Bind Thread.ReplyingItem.Description, Mode=OneWay}" />

                <controls:ImageEx Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center"
                                  Width="32" Height="32" Margin="6,2" Stretch="UniformToFill" 
                                  Source="{x:Bind Thread.ReplyingItem.PreviewImageUri, Mode=OneWay}" />

                <Button Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Style="{x:Null}" Background="Transparent" CornerRadius="2"
                        VerticalAlignment="Center"
                        Click="ClearReplyButton_OnClick">
                    <SymbolIcon Symbol="Cancel" />
                </Button>
            </Grid>

            <Button x:Name="AddFilesButton" ToolTipService.ToolTip="Add photos" AutomationProperties.Name="Add photos"
                    Grid.Column="0" Grid.Row="3"
                    Margin="8,0,0,0"
                    Click="AddFilesButton_OnClick">
                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEB9F;"/>
            </Button>

            <Button x:Name="AddGifButton" ToolTipService.ToolTip="Add a GIF" AutomationProperties.Name="Add a GIF"
                    Grid.Column="1" Grid.Row="3"
                    Margin="2,0,0,0">
                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xF4A9;"/>
                <Button.Flyout>
                    <Flyout x:Name="GifPickerFlyout">
                        <controls1:AnimatedImagePicker x:Name="GifPicker" Thread="{x:Bind Thread, Mode=OneWay}"/>
                    </Flyout>
                </Button.Flyout>
            </Button>

            <TextBox x:Name="MessageTextBox" Text="{x:Bind Thread.DraftMessage, Mode=TwoWay}" TextChanged="MessageTextBox_OnTextChanged"
                     Grid.Column="2" Grid.Row="2" Grid.RowSpan="2"
                     Margin="4,0"
                     VerticalAlignment="Stretch"
                     TextWrapping="Wrap"
                     PlaceholderText="Type a message"
                     MaxLength="2200" 
                     AcceptsReturn="True" 
                     KeyboardAcceleratorPlacementMode="Hidden"
                     TabIndex="0">
                <TextBox.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Enter" Modifiers="None" Invoked="MessageTextBox_OnEnterPressed"/>
                    <KeyboardAccelerator Key="V" Modifiers="Control" Invoked="MessageTextBox_OnCtrlV" />
                </TextBox.KeyboardAccelerators>
            </TextBox>

            <Button Grid.Column="3" Grid.Row="3" ToolTipService.ToolTip="Insert an Emoji" AutomationProperties.Name="Insert an Emoji" 
                    Margin="0,0,2,0" Click="InsertEmojiButton_OnClick">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control" Key="E" />
                </Button.KeyboardAccelerators>
                <SymbolIcon Symbol="Emoji2" />
            </Button>

            <Button x:Name="SendButton" ToolTipService.ToolTip="Send" AutomationProperties.Name="Send"
                    HorizontalAlignment="Stretch"
                    Grid.Column="4" Grid.Row="3"
                    Margin="0,0,8,0" Click="SendButton_Click">
                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" 
                          Glyph="{x:Bind MessageTextBox.Text, Mode=OneWay, Converter={StaticResource SendButtonGlyphConverter}}"/>
            </Button>
        </Grid>
    </Grid>
</UserControl>

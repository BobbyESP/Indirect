<UserControl
    x:Class="Indirect.Controls.ThreadItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Indirect"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:core="using:FluiFramework.UWP.Core" 
    xmlns:converters="using:Indirect.Converters"
    xmlns:wrappers="using:Indirect.Wrapper" 
    xmlns:controls1="using:Indirect.Controls" 
    xmlns:utilities="using:Indirect.Utilities"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    HorizontalAlignment="Stretch">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="FromThemItemBackground" Color="#333333"></SolidColorBrush>
                    <SolidColorBrush x:Key="FromMeItemBackground" Color="{ThemeResource SystemAccentColorDark1}"></SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="FromThemItemBackground" Color="#e0e0e0"></SolidColorBrush>
                    <SolidColorBrush x:Key="FromMeItemBackground" Color="{ThemeResource SystemAccentColorLight3}"></SolidColorBrush>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <converters:LikeUnlikeStyleConverter x:Key="LikeUnlikeStyleConverter">
                <converters:LikeUnlikeStyleConverter.LikeStyle>
                    <Style x:Name="LikeMenuStyle" TargetType="MenuFlyoutItem">
                        <Setter Property="Text" Value="Like"/>
                        <Setter Property="Icon">
                            <Setter.Value>
                                <FontIcon Glyph="&#xEB52;"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </converters:LikeUnlikeStyleConverter.LikeStyle>
                <converters:LikeUnlikeStyleConverter.UnlikeStyle>
                    <Style x:Name="UnlikeMenuStyle" TargetType="MenuFlyoutItem">
                        <Setter Property="Text" Value="Unlike"/>
                        <Setter Property="Icon">
                            <Setter.Value>
                                <FontIcon Glyph="&#xEB51;"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </converters:LikeUnlikeStyleConverter.UnlikeStyle>
            </converters:LikeUnlikeStyleConverter>

            <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
            <converters:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
            <converters:FromMeBoolToGridColumnConverter x:Key="FromMeBoolToGridColumnConverter"/>
            <converters:ReactionsFromMeConverter x:Key="ReactionsFromMeConverter"
                                                 FromMe="{StaticResource FromMeReaction}"
                                                 FromThem="{StaticResource FromThemReaction}"/>
            <converters:ReactionsVisibilityConverter x:Key="ReactionsVisibilityConverter"/>
            <converters:ReactionTextVisibilityConverter x:Key="ReactionTextVisibilityConverter"/>
            <converters:FromMeBoolToAlignmentConverter x:Key="FromMeAlignmentConverter"/>
            <converters:ReelShareTextVisibilityConverter x:Key="ReelShareTextVisibilityConverter"/>
            <converters:FromMeBoolToBrushConverter x:Key="FromMeBrushConverter" 
                                                   FromMe="{StaticResource FromMeItemBackground}"
                                                   FromThem="{StaticResource FromThemItemBackground}"/>
            <converters:OpenButtonStyleConverter x:Key="OpenButtonStyleConverter" 
                                                 AvailableStyle="{StaticResource AvailableOpen}"
                                                 NotAvailableStyle="{StaticResource NotAvailableOpen}"/>
            <converters:VariableMaxWidthConverter x:Key="VariableMaxWidthConverter"/>
            <converters:ReelShareImageMarginConverter x:Key="ReelShareImageMarginConverter"/>
            <converters:HumanizedDateTimeConverter x:Key="HumanizedDateTimeConverter"/>

            <Style x:Name="FromMeReaction" TargetType="FontIcon">
                <Setter Property="Glyph" Value="&#xEB52;"/>
                <Setter Property="Foreground" Value="Crimson"/>
            </Style>
            <Style x:Name="FromThemReaction" TargetType="FontIcon">
                <Setter Property="Glyph" Value="&#xEB51;"/>
            </Style>

            <Style x:Name="AvailableOpen" BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
                <Setter Property="Content" Value="📷 Photo"/>
                <Setter Property="Background" Value="{StaticResource FromMeItemBackground}"/>
                <Setter Property="IsEnabled" Value="True"/>
            </Style>
            <Style x:Name="NotAvailableOpen" BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
                <Setter Property="Content" Value="Expired"/>
                <Setter Property="Foreground" Value="{StaticResource SystemBaseMediumColor}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="IsEnabled" Value="False"/>
            </Style>

            <DataTemplate x:Key="UnexpectedTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Border Background="Transparent" 
                        ToolTipService.ToolTip="This item type is something I has not encountered during development and is totally unaccounted for.
                        It would be nice if you can provide me some context regarding this item so I can support this item in the future."
                        HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                        CornerRadius="2" BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}" BorderThickness="1" >
                    <TextBlock Style="{ThemeResource FluentCaptionTextStyle}"
                               Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                               Text="Unexpected item type. Contact the developer."
                               Margin="6" 
                               MaxWidth="250"
                               HorizontalAlignment="Center" 
                               TextWrapping="Wrap" FontStyle="Italic"/>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="NotSupportedTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Border x:Name="NotAvailableMessage" 
                        Background="Transparent" 
                        HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                        CornerRadius="2" BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}" BorderThickness="1">
                    <TextBlock Style="{ThemeResource FluentCaptionTextStyle}"
                               Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                               Text="Content type is not yet supported."
                               Margin="6" 
                               MaxWidth="250"
                               HorizontalAlignment="Center" 
                               TextWrapping="Wrap" FontStyle="Italic"/>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="HiddenMediaTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Button x:Name="OpenMediaButton"
                        ToolTipService.ToolTip="Open media in immersive view"
                        HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                        Style="{x:Bind VisualMedia.IsExpired, Converter={StaticResource OpenButtonStyleConverter}}"
                        CornerRadius="2" Click="OpenMediaButton_OnClick"/>
            </DataTemplate>

            <DataTemplate x:Key="LikeTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <TextBlock x:Name="MessageContentNoBorder" 
                           Style="{ThemeResource FluentBodyTextStyle}"
                           Text="{x:Bind Like}"
                           FontSize="24"
                           MaxWidth="250"
                           HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                           TextWrapping="Wrap"/>
            </DataTemplate>

            <DataTemplate x:Key="TextTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Border x:Name="MessageContentWithBorder"
                        Background="{x:Bind FromMe, Converter={StaticResource FromMeBrushConverter}}"
                        HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                        CornerRadius="2,2,2,2">
                    <TextBlock Style="{ThemeResource FluentBodyTextStyle}"
                               Text="{x:Bind Text}"
                               Margin="6"
                               MaxWidth="{x:Bind Text.Length, Converter={StaticResource VariableMaxWidthConverter}, FallbackValue=250}"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap"/>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="HyperlinkTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Border x:Name="HyperlinkContent" 
                        MaxWidth="250"
                        Background="{x:Bind FromMe, Converter={StaticResource FromMeBrushConverter}}" 
                        HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                        CornerRadius="2,2,2,2" Padding="6,0,6,0">
                    <HyperlinkButton Content="{x:Bind Text}" NavigateUri="{x:Bind NavigateUri}" Foreground="{StaticResource SystemControlForegroundBaseHighBrush}"/>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="HyperlinkWithPreviewTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <StackPanel Orientation="Vertical">
                    <Border x:Name="HyperlinkContent" 
                            MaxWidth="250"
                            Background="{x:Bind FromMe, Converter={StaticResource FromMeBrushConverter}}" 
                            HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                            CornerRadius="2,2,2,2" Padding="6,0,6,0">
                        <HyperlinkButton Content="{x:Bind Text}" NavigateUri="{x:Bind NavigateUri}" Foreground="{StaticResource SystemControlForegroundBaseHighBrush}"/>
                    </Border>

                    <Border x:Name="HyperlinkPreview" Visibility="{x:Bind IsNavigateUriValid, Converter={StaticResource BooleanVisibilityConverter}}"
                            Background="Transparent" 
                            MaxWidth="250"
                            HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                            CornerRadius="2" Padding="8,6,8,6" Tapped="OpenWebLink"
                            BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}" BorderThickness="1" >
                        <StackPanel Orientation="Vertical">
                            <controls:ImageEx Source="{x:Bind Link.LinkContext.LinkImageUrl}" IsCacheEnabled="False" 
                                              Margin="-8,-6,-8,8" 
                                              CornerRadius="0"/>
                            <TextBlock Text="{x:Bind Link.LinkContext.LinkTitle}" Style="{ThemeResource FluentBaseTextStyle}"/>
                            <NavigationViewItemSeparator/>
                            <TextBlock Text="{x:Bind Link.LinkContext.LinkSummary}" 
                                       Style="{ThemeResource FluentCaptionTextStyle}"
                                       Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}" TextWrapping="Wrap"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="ImageTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <controls:ImageEx x:Name="ImageFrame"
                                  MaxWidth="250" MaxHeight="350"
                                  IsCacheEnabled="True"
                                  CornerRadius="2"
                                  Source="{x:Bind PreviewImageUri}"
                                  HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                                  Tapped="ImageFrame_Tapped"/>
            </DataTemplate>

            <DataTemplate x:Key="VideoTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Grid x:Name="VideoView"
                      HorizontalAlignment="{x:Bind FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="VideoPopupButton" Canvas.ZIndex="2"
                            Grid.Column="{x:Bind FromMe, Converter={StaticResource FromMeBoolToGridColumnConverter}, FallbackValue=0}"
                            Style="{StaticResource ButtonRevealStyle}"
                            Background="Transparent"
                            Margin="8"
                            ToolTipService.ToolTip="Open video in immersive view"
                            HorizontalAlignment="Center" VerticalAlignment="Center" Tapped="VideoPopupButton_OnTapped">
                        <SymbolIcon Symbol="NewWindow"/>
                    </Button>

                    <Border Grid.Column="1"
                            CornerRadius="2"
                            BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}"
                            BorderThickness="1">
                        <controls1:AutoVideoControl x:Name="MediaFrame"
                                                MaxWidth="250" MaxHeight="350" 
                                                VideoHeight="{x:Bind VideoHeight}" VideoWidth="{x:Bind VideoWidth}"
                                                Source="{x:Bind VideoUri}" PosterSource="{x:Bind PreviewImageUri}">
                            <controls1:AutoVideoControl.TransportControls>
                                <MediaTransportControls IsFullWindowEnabled="False" IsFullWindowButtonVisible="False"
                                                        IsZoomButtonVisible="False" ShowAndHideAutomatically="False"/>
                            </controls1:AutoVideoControl.TransportControls>
                        </controls1:AutoVideoControl>
                    </Border>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Name="MediaShareTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Grid x:Name="MediaShareView"
                      CornerRadius="2" Tapped="OpenWebLink"
                      Background="{x:Bind FromMe, Converter={StaticResource FromMeBrushConverter}}"
                      MaxWidth="250"
                      HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="36"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="8,6,8,6">
                        <controls:ImageEx Source="{x:Bind MediaShare.User.ProfilePictureUrl}" Height="24" Width="24" CornerRadius="99" Margin="0,0,8,0" VerticalAlignment="Center"/>
                        <TextBlock Text="{x:Bind MediaShare.User.Username}" 
                                   Style="{ThemeResource FluentBaseTextStyle}"
                                   MaxLines="1" 
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                    <controls:ImageEx x:Name="MediaShareImageFrame" Grid.Row="1" 
                                      Source="{x:Bind PreviewImageUri}"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"/>
                    <ScrollViewer Grid.Row="2" MaxHeight="160" Margin="8,4,8,4">
                        <TextBlock Style="{ThemeResource FluentCaptionTextStyle}"
                                   Visibility="{x:Bind MediaShare.Caption, Converter={StaticResource NullVisibilityConverter}}"
                                   Text="{x:Bind MediaShare.Caption.Text}" IsTextSelectionEnabled="True"
                                   TextWrapping="Wrap"/>
                    </ScrollViewer>
                    <Border Grid.Row="3" HorizontalAlignment="Stretch" BorderBrush="{ThemeResource MainBackground}" BorderThickness="0,1,0,0"></Border>
                    <HyperlinkButton Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource SystemControlHyperlinkBaseHighBrush}"
                                     NavigateUri="{x:Bind NavigateUri}" FontWeight="SemiBold" Content="See full post on instagram.com →"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="ReelShareTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <StackPanel Orientation="Vertical" 
                            HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}">
                    <TextBlock Text="{x:Bind Description}"
                               Style="{ThemeResource FluentCaptionTextStyle}"
                               Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                               HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                               Margin="0,0,0,2"/>
                    <controls:ImageEx Source="{x:Bind PreviewImageUri}"
                                      Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource NullVisibilityConverter}}"
                                      MaxWidth="100" Height="200" Stretch="UniformToFill" Margin="{x:Bind ReelShareMedia.Type, Converter={StaticResource ReelShareImageMarginConverter}}"
                                      HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                                      CornerRadius="2" Tapped="ReelShareImage_Tapped"/>
                    <Border x:Name="MessageContentWithBorder"
                            Visibility="{x:Bind ReelShareMedia.Type, Converter={StaticResource ReelShareTextVisibilityConverter}}"
                            Background="{x:Bind FromMe, Converter={StaticResource FromMeBrushConverter}}"
                            HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                            CornerRadius="2,2,2,2">
                        <TextBlock Style="{ThemeResource FluentBodyTextStyle}"
                                   Text="{x:Bind ReelShareMedia.Text}"
                                   Margin="6"
                                   MaxWidth="250"
                                   HorizontalAlignment="Center"
                                   TextWrapping="Wrap"/>
                    </Border>
                </StackPanel>
            </DataTemplate>
                
            <DataTemplate x:Key="StoryShareTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <StackPanel Orientation="Vertical" 
                            HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}">
                    <TextBlock Style="{ThemeResource FluentCaptionTextStyle}"
                               HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                               Visibility="{x:Bind StoryShareMedia.OwnerUsername, Converter={StaticResource NullVisibilityConverter}}"
                               Margin="0,0,0,2">
                        <Span>Sent <Hyperlink Click="StoryShareOwnerLink_OnClick">@<Run Text="{x:Bind StoryShareMedia.OwnerUsername}"/></Hyperlink>'s story</Span>
                    </TextBlock>
                    <controls:ImageEx Source="{x:Bind PreviewImageUri}"
                                      Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource NullVisibilityConverter}}"
                                      MaxWidth="100" Height="200" Stretch="UniformToFill" Margin="{x:Bind StoryShareMedia.Type, Converter={StaticResource ReelShareImageMarginConverter}}"
                                      HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                                      CornerRadius="2" Tapped="ReelShareImage_Tapped"/>
                    <TextBlock Text="{x:Bind StoryShareMedia.Message}" Margin="0,-2,0,0"
                               Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}" Style="{ThemeResource FluentCaptionTextStyle}"
                               Visibility="{x:Bind StoryShareMedia.Message, Converter={StaticResource NullVisibilityConverter}}"/>
                    <Border x:Name="MessageContentWithBorder"
                            Visibility="{x:Bind StoryShareMedia.Text, Converter={StaticResource NullVisibilityConverter}}"
                            Background="{x:Bind FromMe, Converter={StaticResource FromMeBrushConverter}}"
                            HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                            CornerRadius="2,2,2,2">
                        <TextBlock Style="{ThemeResource FluentBodyTextStyle}"
                                   Text="{x:Bind StoryShareMedia.Text}"
                                   Margin="6"
                                   MaxWidth="250"
                                   HorizontalAlignment="Center"
                                   TextWrapping="Wrap"/>
                    </Border>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="AudioTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Border CornerRadius="2"
                        HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                        BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}"
                        BorderThickness="1">
                    <controls1:AutoVideoControl Width="250" Source="{x:Bind VideoUri}">
                        <controls1:AutoVideoControl.TransportControls>
                            <MediaTransportControls IsFullWindowEnabled="False" IsFullWindowButtonVisible="False"
                                                    IsZoomButtonVisible="False" ShowAndHideAutomatically="False"
                                                    IsCompact="True"/>
                        </controls1:AutoVideoControl.TransportControls>
                    </controls1:AutoVideoControl>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="VideoCallTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Border x:Name="NotAvailableMessage" 
                        Background="Transparent" 
                        HorizontalAlignment="{x:Bind FromMe, Converter={StaticResource FromMeAlignmentConverter}}"
                        CornerRadius="2" BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}" BorderThickness="1">
                    <TextBlock Style="{ThemeResource FluentCaptionTextStyle}"
                               Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                               Text="{x:Bind Description}"
                               Margin="6" 
                               MaxWidth="250"
                               HorizontalAlignment="Center" 
                               TextWrapping="Wrap" FontStyle="Italic"/>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="PlaceholderTemplate" x:DataType="wrappers:InstaDirectInboxItemWrapper">
                <Border Background="Transparent" 
                        MaxWidth="190"
                        CornerRadius="2" Padding="8,6,8,6"
                        BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}" BorderThickness="1" >
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{x:Bind Placeholder.Title, Mode=OneWay}" Style="{ThemeResource FluentBaseTextStyle}" Margin="0,0,0,2"/>
                        <TextBlock Text="{x:Bind Placeholder.Message, Mode=OneWay}" 
                                   Style="{ThemeResource FluentCaptionTextStyle}"
                                   Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}" TextWrapping="Wrap"/>
                    </StackPanel>
                </Border>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>


    <StackPanel x:Name="ItemContainer" Orientation="Vertical"
                HorizontalAlignment="Stretch"
                Margin="0,2,0,2">

        <TextBlock HorizontalAlignment="Center" 
                   Text="{x:Bind Item.Timestamp, Converter={StaticResource HumanizedDateTimeConverter}, Mode=OneWay}" 
                   Visibility="{x:Bind Item.ShowTimestampHeader, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}" 
                   Style="{ThemeResource FluentCaptionTextStyle}"
                   Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                   Margin="8,14,8,8"/>

        <TextBlock HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneWay, Converter={StaticResource FromMeAlignmentConverter}}" 
                   Text="{x:Bind Item.Sender.Username, Mode=OneWay}" 
                   Visibility="{x:Bind Item.ShowNameHeader, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}" 
                   Style="{ThemeResource FluentCaptionTextStyle}"
                   Foreground="{StaticResource SystemControlForegroundBaseLowBrush}"
                   Margin="0,0,0,2"/>

        <ContentControl x:Name="MainContentControl" Content="{x:Bind Item, Mode=OneWay}" 
                        HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneWay, Converter={StaticResource FromMeAlignmentConverter}}"
                        SizeChanged="ConfigTooltip_OnSizeChanged" DoubleTapped="Item_DoubleTapped">
            <ContentControl.ContextFlyout>
                <MenuFlyout>
                    <MenuFlyoutItem x:Name="LikeItemMenuOption" Style="{x:Bind Item.Reactions.MeLiked, Mode=OneWay, Converter={StaticResource LikeUnlikeStyleConverter}}"
                                    Click="LikeUnlike_Click"/>
                    <MenuFlyoutItem x:Name="MenuCopyOption" Visibility="Collapsed" Text="Copy" Click="MenuCopyOption_Click">
                        <MenuFlyoutItem.Icon>
                            <SymbolIcon Symbol="Copy"/>
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutSeparator Visibility="{x:Bind Item.FromMe, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}"/>
                    <MenuFlyoutItem Visibility="{x:Bind Item.FromMe, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}" 
                                    Icon="Delete" Text="Unsend" Click="UnsendMessage"/>
                </MenuFlyout>
            </ContentControl.ContextFlyout>
            <ContentControl.ContentTemplateSelector>
                <utilities:ItemTemplateSelector TextTemplate="{StaticResource TextTemplate}"
                                            LikeTemplate="{StaticResource LikeTemplate}"
                                            HyperlinkTemplate="{StaticResource HyperlinkTemplate}"
                                            HyperlinkWithPreviewTemplate="{StaticResource HyperlinkWithPreviewTemplate}"
                                            NotSupportedTemplate="{StaticResource NotSupportedTemplate}"
                                            HiddenMediaTemplate="{StaticResource HiddenMediaTemplate}"
                                            ImageTemplate="{StaticResource ImageTemplate}"
                                            VideoTemplate="{StaticResource VideoTemplate}"
                                            AudioTemplate="{StaticResource AudioTemplate}"
                                            MediaShareTemplate="{StaticResource MediaShareTemplate}"
                                            ReelShareTemplate="{StaticResource ReelShareTemplate}"
                                            StoryShareTemplate="{StaticResource StoryShareTemplate}"
                                            VideoCallTemplate="{StaticResource VideoCallTemplate}"
                                            UnexpectedTemplate="{StaticResource UnexpectedTemplate}"
                                            PlaceholderTemplate="{StaticResource PlaceholderTemplate}"/>
            </ContentControl.ContentTemplateSelector>
        </ContentControl>

        <Border Margin="6,-2,6,0" Background="{ThemeResource FromThemItemBackground}" CornerRadius="6" Padding="6,2,6,2"
                BorderBrush="{ThemeResource MainBackground}" BorderThickness="2"
                HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneWay, Converter={StaticResource FromMeAlignmentConverter}}"
                Visibility="{x:Bind Item.Reactions.LikesCount, Mode=OneWay, Converter={StaticResource ReactionsVisibilityConverter}, FallbackValue=Collapsed}">
            <StackPanel x:Name="Reactions" Orientation="Horizontal">
                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="12"
                        Style="{x:Bind Item.Reactions.MeLiked, Mode=OneWay, Converter={StaticResource ReactionsFromMeConverter}}"/>
                <TextBlock Text="{x:Bind Item.Reactions.LikesCount, Mode=OneWay}" Margin="2,0,0,0"
                           Visibility="{x:Bind Item.Reactions.LikesCount, Mode=OneWay, Converter={StaticResource ReactionTextVisibilityConverter}}"
                           Style="{ThemeResource FluentCaptionTextStyle}"/>
            </StackPanel>
        </Border>
    </StackPanel>
</UserControl>

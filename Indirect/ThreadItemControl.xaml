<UserControl
    x:Class="Indirect.ThreadItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Indirect"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:core="using:FluiFramework.UWP.Core" 
    xmlns:converters="using:Indirect.Converters"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <core:FluiFrameworkThemeResources/>
            </ResourceDictionary.MergedDictionaries>

            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="FromThemItemBackground" Color="{StaticResource SystemBaseLowColor}"></SolidColorBrush>
                    <SolidColorBrush x:Key="FromMeItemBackground" Color="{ThemeResource SystemAccentColorDark1}"></SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="FromThemItemBackground" Color="{StaticResource SystemBaseLowColor}"></SolidColorBrush>
                    <SolidColorBrush x:Key="FromMeItemBackground" Color="{ThemeResource SystemAccentColorLight1}"></SolidColorBrush>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <converters:ReactionsFromMeConverter x:Key="ReactionsFromMeConverter"
                                                 FromMe="{StaticResource FromMeReaction}"
                                                 FromThem="{StaticResource FromThemReaction}"/>
            <converters:ReactionsVisibilityConverter x:Key="ReactionsVisibilityConverter"/>
            <converters:ReactionTextVisibilityConverter x:Key="ReactionTextVisibilityConverter"/>
            <converters:FromMeBoolToAlignmentConverter x:Key="FromMeAlignmentConverter"/>
            <converters:FromMeBoolToBrushConverter x:Key="FromMeBrushConverter" 
                                                   FromMe="{StaticResource FromMeItemBackground}"
                                                   FromThem="{StaticResource FromThemItemBackground}"/>
            <converters:OpenButtonStyleConverter x:Key="OpenButtonStyleConverter" 
                                                 AvailableStyle="{StaticResource AvailableOpen}"
                                                 NotAvailableStyle="{StaticResource NotAvailableOpen}"/>

            <Style x:Name="FromMeReaction" TargetType="FontIcon">
                <Setter Property="Glyph" Value="&#xEB52;"/>
                <Setter Property="Foreground" Value="Crimson"/>
            </Style>
            <Style x:Name="FromThemReaction" TargetType="FontIcon">
                <Setter Property="Glyph" Value="&#xEB51;"/>
            </Style>

            <Style x:Name="AvailableOpen" BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
                <Setter Property="Content" Value="📷 Photo"/>
                <Setter Property="Background" Value="{StaticResource FromMeItemBackground}"/>
                <Setter Property="IsEnabled" Value="True"/>
            </Style>
            <Style x:Name="NotAvailableOpen" BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
                <Setter Property="Content" Value="Expired"/>
                <Setter Property="Foreground" Value="{StaticResource SystemBaseMediumColor}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="IsEnabled" Value="False"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>


    <StackPanel x:Name="ItemContainer" Orientation="Vertical" 
                HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"
                Margin="0,2,0,2" DoubleTapped="ItemContainer_DoubleTapped">

        <Button x:Name="OpenMediaButton"
                Visibility="Collapsed"
                HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"
                Style="{x:Bind Item.VisualMedia.IsExpired, Converter={StaticResource OpenButtonStyleConverter}}"
                CornerRadius="2,2,2,2" Click="OpenMediaButton_OnClick"/>

        <Border x:Name="NotAvailableMessage" 
                Visibility="Collapsed"
                Background="Transparent" 
                HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"
                CornerRadius="2,2,2,2" BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}" BorderThickness="1" >
            <TextBlock Style="{ThemeResource FluentCaptionTextStyle}"
                       Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                       Text="Content type is not yet supported."
                       Margin="6" 
                       MaxWidth="250"
                       HorizontalAlignment="Center" 
                       TextWrapping="WrapWholeWords" FontStyle="Italic"/>
        </Border>

        <Border x:Name="MessageContentWithBorder" 
                Background="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeBrushConverter}}" 
                HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"
                CornerRadius="2,2,2,2">
            <TextBlock Style="{ThemeResource FluentBodyTextStyle}"
                       Text="{x:Bind Item.Text}"
                       Margin="6" 
                       MaxWidth="250"
                       HorizontalAlignment="Center"
                       TextWrapping="WrapWholeWords"/>
        </Border>

        <TextBlock x:Name="MessageContentNoBorder" 
                   Visibility="Collapsed"
                   Style="{ThemeResource FluentBodyTextStyle}"
                   Text="{x:Bind Item.Text}"
                   FontSize="24"
                   MaxWidth="250"
                   HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"
                   TextWrapping="WrapWholeWords"/>

        <controls:ImageEx x:Name="ImageFrame" CachingStrategy="Custom"
                          MaxWidth="250" MaxHeight="350"
                          IsCacheEnabled="True"
                          CornerRadius="2"
                          BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}"
                          BorderThickness="1"
                          Source="{x:Bind Item.PreviewImageUri}"
                          HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"
                          Visibility="Collapsed" Tapped="ImageFrame_Tapped"/>

        
         <Grid x:Name="VideoGrid" Visibility="Collapsed"
               PointerExited="MediaFrame_PointerExited"
               PointerEntered="MediaFrame_OnPointerEntered" CornerRadius="2"
               BorderBrush="{StaticResource SystemControlForegroundBaseMediumBrush}"
               BorderThickness="1"> 
             <Button x:Name="VideoPopupButton" Canvas.ZIndex="2"
                           Style="{StaticResource AccentButtonStyle}"
                           Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                           HorizontalAlignment="Center" VerticalAlignment="Center" Tapped="VideoPopupButton_OnTapped">
                 <SymbolIcon Symbol="NewWindow"/>
             </Button>
            <MediaPlayerElement x:Name="MediaFrame"
                                AreTransportControlsEnabled="True"
                                MaxWidth="250" MaxHeight="350"
                                HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"/>
        </Grid> 

        

        <StackPanel x:Name="Reactions" Orientation="Horizontal" Margin="6,1,8,0"
                    HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"
                    Visibility="{x:Bind Item.Reactions.LikesCount, Mode=OneWay, Converter={StaticResource ReactionsVisibilityConverter}, FallbackValue=Collapsed}">
        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="12"
                Style="{x:Bind Item.Reactions.MeLiked, Mode=OneWay, Converter={StaticResource ReactionsFromMeConverter}}"/>
        <TextBlock Text="{x:Bind Item.Reactions.LikesCount, Mode=OneWay}" Margin="2,0,0,0"
                   Visibility="{x:Bind Item.Reactions.LikesCount, Mode=OneWay, Converter={StaticResource ReactionTextVisibilityConverter}}"
                   Style="{ThemeResource FluentCaptionTextStyle}"/>
        </StackPanel>
        <TextBlock x:Name="Timestamp"
                   Style="{ThemeResource FluentCaptionTextStyle}"
                   Text="{x:Bind Item.TimeStamp}" 
                   Foreground="{StaticResource SystemControlForegroundBaseMediumBrush}"
                   Margin="2"
                   HorizontalAlignment="{x:Bind Item.FromMe, Mode=OneTime, Converter={StaticResource FromMeAlignmentConverter}}"
                   Visibility="Collapsed" />
    </StackPanel>
</UserControl>
